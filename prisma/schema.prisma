// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  email        String    @unique
  username     String    @unique
  firstName    String?
  lastName     String?
  imageUrl     String?
  bio          String?
  passwordHash String
  followedBy   Follows[] @relation("follower")
  following    Follows[] @relation("following")

  recipes     Recipe[]
  collections Collection[]
  Tags        Tag[]
  activity    Activity[]
}

model Follows {
  follower    User     @relation("follower", fields: [followerId], references: [id])
  followerId  Int
  following   User     @relation("following", fields: [followingId], references: [id])
  followingId Int
  createdAt   DateTime @default(now())

  @@id([followerId, followingId])
}

model Recipe {
  id          String       @id @default(uuid())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  title       String
  description String?
  userId      Int
  user        User         @relation(fields: [userId], references: [id])
  collections Collection[]
  tags        Tag[]
  activity    Activity[]
}

model Collection {
  id          String     @id @default(uuid())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  title       String
  description String?
  userId      Int
  user        User       @relation(fields: [userId], references: [id])
  recipes     Recipe[]
  activity    Activity[]
}

model Tag {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  recipes   Recipe[]
}

model Activity {
  id           Int         @id @default(autoincrement())
  createdAt    DateTime    @default(now())
  userId       Int
  user         User        @relation(fields: [userId], references: [id])
  recipeId     String?
  recipes      Recipe?     @relation(fields: [recipeId], references: [id])
  collectionId String?
  collections  Collection? @relation(fields: [collectionId], references: [id])
}
